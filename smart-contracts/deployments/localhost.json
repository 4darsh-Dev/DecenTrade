{
  "nft": {
    "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "abi": [
      "constructor()",
      "error ERC2981InvalidDefaultRoyalty(uint256,uint256)",
      "error ERC2981InvalidDefaultRoyaltyReceiver(address)",
      "error ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)",
      "error ERC2981InvalidTokenRoyaltyReceiver(uint256,address)",
      "error ERC721IncorrectOwner(address,uint256,address)",
      "error ERC721InsufficientApproval(address,uint256)",
      "error ERC721InvalidApprover(address)",
      "error ERC721InvalidOperator(address)",
      "error ERC721InvalidOwner(address)",
      "error ERC721InvalidReceiver(address)",
      "error ERC721InvalidSender(address)",
      "error ERC721NonexistentToken(uint256)",
      "error EnforcedPause()",
      "error ExpectedPause()",
      "error OwnableInvalidOwner(address)",
      "error OwnableUnauthorizedAccount(address)",
      "event Approval(address indexed,address indexed,uint256 indexed)",
      "event ApprovalForAll(address indexed,address indexed,bool)",
      "event BatchMetadataUpdate(uint256,uint256)",
      "event MetadataUpdate(uint256)",
      "event OwnershipTransferred(address indexed,address indexed)",
      "event Paused(address)",
      "event Transfer(address indexed,address indexed,uint256 indexed)",
      "event Unpaused(address)",
      "function approve(address,uint256)",
      "function balanceOf(address) view returns (uint256)",
      "function getApproved(uint256) view returns (address)",
      "function isApprovedForAll(address,address) view returns (bool)",
      "function mintNFT(address,string,uint96) returns (uint256)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function ownerOf(uint256) view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceOwnership()",
      "function royaltyInfo(uint256,uint256) view returns (address,uint256)",
      "function safeTransferFrom(address,address,uint256)",
      "function safeTransferFrom(address,address,uint256,bytes)",
      "function setApprovalForAll(address,bool)",
      "function supportsInterface(bytes4) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenURI(uint256) view returns (string)",
      "function transferFrom(address,address,uint256)",
      "function transferOwnership(address)",
      "function unpause()"
    ]
  },
  "marketplace": {
    "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "abi": [
      "constructor()",
      "error EnforcedPause()",
      "error ExpectedPause()",
      "error OwnableInvalidOwner(address)",
      "error OwnableUnauthorizedAccount(address)",
      "error ReentrancyGuardReentrantCall()",
      "event MarketItemCreated(uint256 indexed,address indexed,uint256 indexed,address,address,uint256,bool)",
      "event MarketItemSold(uint256 indexed,address indexed,uint256 indexed,address,address,uint256)",
      "event OwnershipTransferred(address indexed,address indexed)",
      "event Paused(address)",
      "event Unpaused(address)",
      "function createMarketItem(address,uint256,uint256) payable",
      "function createMarketSale(address,uint256) payable",
      "function fetchItemsCreated() view returns ((uint256,address,uint256,address,address,uint256,bool)[])",
      "function fetchMarketItems() view returns ((uint256,address,uint256,address,address,uint256,bool)[])",
      "function fetchMyNFTs() view returns ((uint256,address,uint256,address,address,uint256,bool)[])",
      "function getListingFee() view returns (uint256)",
      "function getOwnershipHistory(uint256) view returns (address[])",
      "function listingFee() view returns (uint256)",
      "function marketplaceOwner() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceOwnership()",
      "function setListingFee(uint256)",
      "function transferOwnership(address)",
      "function unpause()"
    ]
  },
  "network": "localhost"
}